1.list all the columns of the salespeople table.?
ans:   desc salespeople;

=======================================================================================================================================================================
2. list all customers with a rating of 100.?
ans:  select* from customer where rating=100;

=======================================================================================================================================================================
3. Find all records in the Customer table with NULL values in the city column.
ans:  select* from customer where city is null;

=======================================================================================================================================================================
4. Find the largest order taken by each salesperson on each date.
ans:  select a.num,a.odate,a.cnum,b.snum,max(a.amt) from orders a, customer b where a.cnum=b.cnum;

=======================================================================================================================================================================
5. Arrange the Orders table by descending customer number.?
ans:  select * from orders order by cnum desc;

=======================================================================================================================================================================
6. Find which salespeople currently have orders in the Orders table.
ans: select a.onum,a.amt,a.odate,a.cnum,b.snum from orders a, customer b where a.cnum = b.cnum;

=======================================================================================================================================================================
7. List names of all customers matched with the salespeople serving them.?

ans:  select cname,cnum from customer a, salespeople b where b.snum=a.snum;

=======================================================================================================================================================================
8. Find the names and numbers of all salespeople who had more than one customer.?
ans:  select a.sname,a.sname,a.snum,count(*) as custcount from salespeople a,customer b where a.snum=b.snum group by a.snum havaing custcount>1;

=======================================================================================================================================================================
9. Count the orders of each of the salespeople and output the results in descending order.
ans: select a.snum,count(*) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum order by  count(*) desc;

===========================================================================================================
10. List the Customer table if and only if one or more of the customers in the Customer table are
located in San Jose.
ans:  select * from customer where city="san_jose";

=============================================================================================================
11. Match salespeople to customers according to what city they lived in.
ans:  selcet * from salespeople a,customer b where a.city=b.city;

============================================================================================================
12. Find the largest order taken by each salesperson.
ans: select a.snum,a.sname,max(c.amt) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum;
===============================================================================================================
13. Find customers in San Jose who have a rating above 200.
ans: select * from customer where city="san_jose" and ratig>200;

=============================================================================================================
14. List the names and commissions of all salespeople in London.
ans: select comm from salespeople where city="london";

============================================================================================================
15. List all the orders of salesperson Motika from the Orders table.
ans:select c.sname,b.onum from customer a, orders b,salespeople c where a.cnum=b.cnum and a.snum=c.snum and c.sname="motika":

====================================================================================================================
16. Find all customers with orders on October 3.
ans:  select a.cname,b.onum from customer a,orders b where a.cnum=b.cnum and b.odate="1996-03-10";

=====================================================================================================================
17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those
dates where the SUM was not at least 2000.00 above the MAX amount.
ans:   select odate,sum(amt) from orders group by odate having sum(amt)>2000.00;

==============================================================================================
18. Select all orders that had amounts that were greater than at least one of the orders from
October 6.
ans:  select * from orders where amt >(select min(amt) from orders where odate>(1996-05-10));

=======================================================================================================
19. Write a query that uses the EXISTS operator to extract all salespeople who have customers
with a rating of 300.
ans: select a.name,b.rating from salespeople a, customer b where a.snum=b.snum and b.rating=300;

=========================================================================================================================
20. Find all pairs of customers having the same rating.
ans: select cname,cnum,raitng from customer order by rating;

==========================================================================================================================
21. Find all customers whse CNUM is 1000 above the SNUM of Serres.
ans:  select * from customer where cnum> (select (snum+100) from salespeople where sname = "serres");

===========================================================================================
22. Give the salespeople’s commissions as percentages instead of decimal numbers.
ans: select sname,snum,comm*100 from salespeople;

======================================================================================================================
23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders
which are less than $3000.00 in value.
ans: select a.onum,max(a.amt) as max a.odate, a.cnum,b.snum from orders a, customer b where a.cnum group by snum, odate having max>3000;

=================================================================================================================
24. List the largest orders for October 3, for each salesperson.
ans: select a.sname,a.snum,max(c.amt) from salespeople a,customer b,orders c where a.snum =b.snum and b.cnum = c.cnum and c.odate="1996-03-10" group by a.snum;

=================================================================================================
25. Find all customers located in cities where Serres (SNUM 1002) has customers.
ans: select a.cnum, a.cname, a.city from customer a, salespeople b where a.snum=b.snum and b.sname="serres";

==========================================================================
26. Select all customers with a rating above 200.00.
ans:select * from customer where rating>200;

============================================================================================
27. Count the number of salespeople currently listing orders in the Orders table.
ans:  select a.sname,count(*) from salespeople a,customer b,orders c where a.snum = b.snum and b.cnum = c.cnum group by a.snum;

================================================================================================
28. Write a query that produces all customers serviced by salespeople with a commission above
12%. Output the customer’s name and the salesperson’s rate of commission.
ans: select a.amt,a.cnum,b.snum,c.sname,c.comm from orders a, customer b from 

================================================================================================
29. Find salespeople who have multiple customers.
ans: select snum,sname,count(*) from salespeople a,customer b where a.snum = b.snum group by snum having count(*)>1;


===================================================================================================
30. Find salespeople with customers located in their city.
ans: select a.cname,a.city,b.sname from  customer a,salespeople b where a.snum=b.snum and a.city =b.city;

=============================================================================================
31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.
ans: select * from salespeople where substring(sname,1,1)="l";

==========================================================================================================
32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros.
Assume you do not know his customer number.
ans:  select * from orders where cnum = (select cnum from customers where cname="cisneros");

===================================================================================================================
33. Find the largest orders for Serres and Rifkin.
ans:select b.snum,c.sname,max(amt) from orders a,customer b,salespeople c where a.cnum=b.cnum and b.snum=c.snum and (sname='rifkin' or sname='serres')group by b.snum;

==============================================================================================================
34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.
ans: select snum,sname,comm as comm,city from salespeople;

==================================================================================
35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
ans: select * from customer where substring(cname,1,1) in ("A","B","C","D","E","F","G");

===============================================================================================
36. Select all the possible combinations of customers that you can assign.
ans:
================================================================================================
37. Select all orders that are greater than the average for October 4.
ans: select * from orders where amt>(select sum(amt)/count(*) from orders where odate="1996-04-10");

===========================================================================================================
38. Write a select command using a corelated subquery that selects the names and numbers of all
customers with ratings equal to the maximum for their city.
ans: select city, max(rating) from customer group by city;

===================================================================================================
39. Write a query that totals the orders for each day and places the results in descending order.
ans:select sum(amt) as total from orders group by odate order by total desc;

==========================================================================================================
40. Write a select command that produces the rating followed by the name of each customer in
San Jose.
ans: select rating,cname from customer where city="jose";

============================================================================================================
41. Find all orders with amounts smaller than any amount for a customer in San Jose.
ans: select max(amt),a.cnum from customer a,orders b where a.cnum=b.cnum group by a.cnum;

==================================================================================================
42. Find all orders with above average amounts for their customers.
ans: select * from orders a where amt>(select avg(amt)from orders b where b.cnum=a.cnum);

=========================================================================================================
43. Write a query that selects the highest rating in each city.
ans:  select city,max(rating) from customer group by city;

=======================================================================================================
44. Write a query that calculates the amount of the salesperson’s commission on each order by a
customer with a rating above 100.00.
ans:  select c.amt*a.comm as total ,a.snum,a.sname from salespeople a, customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and b.rating>100.00;

=============================================================================================================
45. Count the customers with ratings above San Jose’s average.
ans: select cnum,rating from customer wheere rating>(select avg(rating from customer where city="san_jose";

=================================================================================================================
46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows
with the order reversed.
ans: (select * from salespeople) union all (select * from salespeople order by sname desc);

===================================================================================================================
47. Find all salespeople that are located in either Barcelona or London.
ans: select * from salespeople where city="barcelona" or city="london";

================================================================================================================
48. Find all salespeople with only one customer.
ans:select sname,snum from salespeople where snum in(select snum from customer group by snum having count(snum)>1);

=======================================================================================================================
49. Write a query that joins the Customer table to itself to find all pairs of customers served by a
single salesperson.
ans: select * from customer a,customer b where a.cnum!=b.cnum and a.snum=b.snum;

====================================================================================================
50. Write a query that will give you all orders for more than $1000.00
ans:  select * from orders where amt>1000.00;
================================================================================================================
51. Write a query that lists each order number followed by the name of the customer who made
that order.
ans: select b.onum,a.cname from a,orders b where a.cnum=b.cnum;

==================================================================================================
52. Write 2 queries that select all salespeople (by name and number) who have customers in their
cities who they do not service, one using a join and one a corelated subquery. Which solution
is more elegant?
ans: Select distinct cname from customer a, salespeople b where a.city = b.city and a.snum != b.snum;
	Select cname from customer where cname in ( select cname from customer a, salespeople b where a.city = b.city and a.snum != b.snum );

=====================================================================================================================
53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the
SQL sense) of Serres’?
ans:  select a.sname,b.rating from salespeople a,customer b where a.snum=b.snum;
        select * from customers where rating>=200;
	
====================================================================================================
54. Write 2 queries that will produce all orders taken on October 3 or October 4.
ans:  select * from orders where odate='1996-03-10' or odate='1996-04-10';

==================================================================================================================
55. Write a query that produces all pairs of orders by a given customer. Name that customer and
eliminate duplicates.
ans: select distinct a.cname,b.onum from customer a,orders b where a.cnum=b.cnum;

===================================================================================================================
56. Find only those customers whose ratings are higher than every customer in Rome.
ans: select cname,rating from customer where city="rome" and rating>"rome";

====================================================================================================
57. Write a query on the Customers table whose output will exclude all customers with a rating <=
100.00, unless they are located in Rome.
ans: select * from customer where !(rating<=100 and city="rome");

==============================================================================================================
58. Find all rows from the Customers table for which the salesperson number is 1001.
ans:  select * from customer where snum=1001;

=============================================================================================================
59. Find the total amount in Orders for each salesperson for whom this total is greater than the
amount of the largest order in the table.
ans: select a.snum,a.sname,sum(c.amt) as total from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by b.snum having total>(select max(amt) from orders); 

==============================================================================================================
60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.
ans: select * from orders where amt=0.0 and amt ="null";

===================================================================================================================
61. Produce all combinations of salespeople and customer names such that the former precedes
the latter alphabetically, and the latter has a rating of less than 200.
ans: select * from customer a,salespeople b where a.snum=b.snum and sname<cname and rating<200;

====================================================================================================================
62. List all Salespeople’s names and the Commission they have earned.
ans: select a.sname,a.comm*amt from salespeople a, customer b,orders c where a.snum=b.snum and  b.cnum=c.cnum;

=====================================================================================================================
63. Write a query that produces the names and cities of all customers with the same rating as
Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be
usable if his rating changed.
ans:  select * from customer where rating = (select rating from customer where cnum=2001);

====================================================================================================================
64. Find all salespeople for whom there are customers that follow them in alphabetical order.
ans: select * from customer a,salespeople b where a.snum=b.snum and (substring(sname,1,1)<substring(cname,1,1));

========================================================================================================
65. Write a query that produces the names and ratings of all customers of all who have above
average orders.
ans:  select cname,rating from customer a,orders b where amt>(select avg(amt) from orders);
	
===========================================================================================
66. Find the SUM of all purchases from the Orders table.
ans: select sum(amt) as sum_all_purchases from orders;

=================================================================
67. Write a SELECT command that produces the order number, amount and date for all rows in
the order table.
ans:  select onum,amt,odate from orders ;

=============================================================================================
68. Count the number of nonNULL rating fields in the Customers table (including repeats).
ans: select count(*) from customer where rating is not null;

=========================================================================================
69. Write a query that gives the names of both the salesperson and the customer for each order
after the order number.
ans: select c.onum,a.sname,b.cname from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum;

================================================================================================
70. List the commissions of all salespeople servicing customers in London.
ans:  select a.snum,a.comm from salespeople a,customer b where b.city = "london" and a.snum = b.snum;

=========================================================================================================
71. Write a query using ANY or ALL that will find all salespeople who have no customers located in
their city.
ans: select a.sname,a.city,b.cname,b.city from salespeople a,customer b where a.snum=b.snum;
	select a.sname,a.city,b.cname,b.city from salespeople a,customer b where a.snum=b.snum and a.city!=b.city; 

	select * from salespeople a, customer b where a.snum=b.snum and a.city!=all(select city from customer c where a.snum=c.snum);
==========================================================================================================
72. Write a query using the EXISTS operator that selects all salespeople with customers located in
their cities who are not assigned to them.
ans: select * from customer a,salespeople b where exists(select * from customer c where c.snum=b.snum) and a.snum!=b.snum and a.city!=b.city;

===============================================================================================================
73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field
relates the two tables to one another.)
ans:  select * from customer where snum = (select snum from salespeople where sname ="motika") or snum = (select snum from salespeople where sname = "peel");

============================================================================================================
74. Count the number of salespeople registering orders for each day. (If a salesperson has more
than one order on a given day, he or she should be counted only once.)
ans:   
=============================================================================================================
75. Find all orders attributed to salespeople in London.
ans: select a.sname,a.city,c.onum from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and city="london";

====================================================================================================
76. Find all orders by customers not located in the same cities as their salespeople.
ans:  select c.ornum,b.cname from salespeople a,customer b,orders c where a.snum = b.snum and b.cnum = c.cnum and a.city!=b.city;

===================================================================================================================
77. Find all salespeople who have customers with more than one current order.
ans: select c.snum,sname,a.cnum,count(*) from order a, customer b, salespeople c where a.cnum=b.cnum and b.snum=c.snum group by a.cnum having count(*)>1;

============================================================================================================
78. Write a query that extracts from the Customers table every customer assigned to a
salesperson who currently has at least one other customer (besides the customer being
selected) with orders in the Orders table.
ans:  select * from customer a,(select cnum,count(*) as custcountfrom orders group by cnum) b,(select snum,count(*) as sp_count from  orders x,customer y where x.cnum =y.cnum group by snum) c where a.cnum
	=b.cnum and a.snum =c.snum and sp_count > custcount;

==================================================================================================
79. Write a query that selects all customers whose names begin with ‘C’.
ans: select * from customer where cname like "c%";

=======================================================================================================
80. Write a query on the Customers table that will find the highest rating in each city. Put the output
in this form : for the city (city) the highest rating is : (rating).
ans: select city as for the city,max(rating) the_highest_rating_is from customer group by city;

===============================================================================================================
81. Write a query that will produce the SNUM values of all salespeople with orders currently in the
Orders table (without any repeats).
ans: select a.snum,c.onum from salespeople a, customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by c.onum;

=======================================================================================================================
82. Write a query that lists customers in descending order of rating. Output the rating field first,
followed by the customer’s names and numbers.
ans: select rating,cname,cnum from customer order by rating desc;

=================================================================================================================
83. Find the average commission for salespeople in London.
ans: select snum,sname,city,avg(comm) from salespeople where city="london";

================================================================================================
84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).
ans: select a.snum,c.onum from salespeople a, customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and b.cnum=2001;

===================================================================================================================
85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).
ans: select * from salespeople where comm between 0.10 and 0.12;

===========================================================================================================
86. Write a query that will give you the names and cities of all salespeople in London with a
commission above 0.10.
ans: select sname,city from salespeople where city="london" and comm>0.10;
========================================================================================================
87. What will be the output from the following query?
SELECT * FROM ORDERS
where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum >
2003));
ans: onum 	amt 	odate		cnum
     ----------------------------------------
     3001	18.69	10/03/96	2008
     3003	767.19	10/03/96	2001
     3007	75.75	10/04/96	2002
=========================================================================================================
88. Write a query that selects each customer’s smallest order.
ans: select a.cname,a.city,b.amt,min(b.amt) from customer a,orders b where a.cnum=b.cnum group by cname;
=====================================================================================================
89. Write a query that selects the first customer in alphabetical order whose name begins with G.
ans: select * from customer where cname like"g%";

=============================================================
90. Write a query that counts the number of different nonNULL city values in the Customers table.
ans:select count(city!=null) from customer;

=============================================================================================
91. Find the average amount from the Orders table.
ans: select avg(amt) from orders;

================================================================================================
92. What would be the output from the following query?
SELECT * FROM ORDERS
WHERE NOT (odate = 10/03/96 OR snum > 1006) AND amt >=
1500);
ans:  unknown coloum in this querie.

===========================================================================================
93. Find all customers who are not located in San Jose and whose rating is above 200.
ans: select * from customer where city!="san_jose" and rating > 200;

==========================================================================================================
94. Give a simpler way to write this query :
SELECT snum, sname city, comm FROM salespeople
WHERE (comm > + 0.12 OR comm < 0.14);
ans: select * from salespeople where comm>0.12 or comm<0.14;
	 unknow coloum snum not avalable in qns

===============================================================================================================
95. Evaluate the following query :
SELECT * FROM orders
WHERE NOT ((odate = 10/03/96 AND snum > 1002) OR amt > 2000.00);
ans: select * from order where odate=1996-03-10 or cnum>2002 and amt>2000.00;
	unknow coloum.

================================================================================================================
96. Which salespersons attend to customers not in the city they have been assigned to?
ans: select b.sname,b.city,a.city from salespeople b,customer a where a.snum=b.snum and a.city!=b.city;

=================================================================================================================
97. Which salespeople get commission greater than 0.11 are serving customers rated less than
250?
ans: select * from salespeople a,customer b where a.comm>0.11 and b.rating>200;
===================================================================================================================

98. Which salespeople have been assigned to the same city but get different commission
percentages?
ans: select a.sname,a.city,a.comm*100 from salespeople a,salespeople b where a.city=b.city and a.comm*100!=b.comm*100 group by a.comm;

======================================================================================================================
99. Which salesperson has earned the most by way of commission?
ans: select c.sname,sum(amt*comm) as total from orders a, customer , salespeople c where a.cnum=b.cnum and b.snum=c.snum order by total desc limit 1;

=====================================================================================================================
100.Does the customer who has placed the maximum number of orders have the maximum rating?
ans:select a.cnum, b.cname, count(*) as total_count, rating,(select max(rating) from customer) from orders a, customer b where a.cnum=b.cnum group by cnum order by total_count desc;

=================================================================================================================
101.Has the customer who has spent the largest amount of money been given the highest rating?
ans:  select cname,sum(amt),rating,(select max(rating) from customer) from customer a,orders b where a.cnum = b.cnum group by
 	a.cnum order by sum(amt) desc;

===========================================================================================================
102.List all customers in descending order of customer rating.
ans: select * from customer order by rating desc;
====================================================================================================================
103.On which days has Hoffman placed orders?
ans: select a.cnum, cname,dayname(odate) from orders a,customer b  where a.cnum=b.cnum and b.cname="hoffman";

========================================================================================================================
104.Do all salespeople have different commissions?
ans: select * from salespeople group by comm;

105.Which salespeople have no orders between 10/03/1996 and 10/05/1996?
ans: select * from orders a, customer b where a.cnum=b.cnum and odate not between ("1996-03-10") and ("1996-05-10");

=============================================================================================================
106.How many salespersons have succeeded in getting orders?
ans: select a.sname,a.city from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.sname;

=====================================================================================================================
107.How many customers have placed orders?
ans: select a.cname,a.city,b.onum from customer a,orders b where a.cnum=b.cnum;

====================================================================================================
108.On which date has each salesperson booked an order of maximum value?
ans: select cnum,odate,a.amt,m.snum from orders a, (select max(amt) as maxamt,snum from orders a, customer b where a.cnum=b.cnum group by snum) m where a.amt=maxamt order by m.snum;

========================================================================================
109.Who is the most successful salesperson?
ans: select a.sname,a.city,sum(c.amt),sum(amt)*comm from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum order by sum(amt)*comm desc limit 1;

==================================================================================
110.Who is the worst customer with respect to the company?
ans: select a.cname,a.city,b.onum,b.amt from customer a, orders b where a.cnum=b.cnum order by b.amt limit 1;

======================================================================================================================
111.Are all customers not having placed orders greater than 200 totally been serviced by
salespersons Peel or Serres?
ans: select a.sname,a.city,amt from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and amt>200;

=================================================================================================================
112.Which customers have the same rating?
ans:select * from the customer order by rating;

=========================================================================================================
113.Find all orders greater than the average for October 4th.
ans: select * from orders where amt>(select avg(amt) from orders where odate="1996-04-10";

====================================================================================================================
114.Which customers have above average orders?
ans: select * from orders where amt>(select avg(amt)from orders);

=======================================================================================================================
115.List all customers with ratings above San Jose’s average.
ans: select * from customer where rating>(select avg(rating) from customer where city="san_jose";

=======================================================================================================================
116.Select the total amount in orders for each salesperson for whom the total is greater than the
amount of the largest order in the table.
ans:  select sname,sum(amt) from salespeople a,customer b,orders c where a.snum = b.snum and b.cnum = c.cnum group by a.sname having
	sum(amt) > (select max(amt) from orders);


=====================================================================================================================
117.Give names and numbers of all salespersons who have more than one customer.
ans: select a.snum,a.sname, count(*) as cost_count from salespeople a,coustomer b where a.snum=b.snum group by a.snum having cust_count>1;

================================================================================================================

118.Select all salespersons by name and number who have customers in their city whom they
don’t service.
ans: select a.cname,a.snum,b.sname,a.city,b.city from customer a, salespeople b where a.snum!=b.snum and a.city=b.city;

========================================================================================================================
119.Which customers’ rating should be lowered?
ans:  
	 select a.cnum,b.cname,b.rating,sum(a.amt) as totalspend from orders a,customer b where a.cnum=b.cnum group by cnum order by totalspend;

======================================================================================================================
120.Is there a case for assigning a salesperson to Berlin?
ans: select a.sname,b.city from salespeople a,customer b where a.snum=b.snum;

==========================================================================================================
121.Is there any evidence linking the performance of a salesperson to the commission that he or
she is being paid?
ans:   select b.snum,c.sname,sum(a.amt) as totalsalesbySP,sum(amt)*c.comm from orders a,customer b,salespeople c where a.cnum=b.cnum and b.snum=c.snum group by b.snum
      oredr by totalsalesbySP desc;

=================================================================================================================
122.Does the total amount in orders by customer in Rome and London exceed the commission
paid to salespersons in London and New York by more than 5 times?
ans: select (select sum(a.amt*c.comm) as totalsales from orders a,customer b,salespeople c where a.cnum=b.cnum and b.snum=c.snum and (c.city='London' or c.city='New York'))
      as x,(select sum(a.amt) from orders a,customer b where a.cnum=b.cnum and (b.city='Rome' or b.city='London')) as y;

===================================================================================================================
123.Which is the date, order number, amt and city for each salesperson (by name) for the
maximum order he has obtained?
ans:  select odate,onum,amt,city from orders where amt=(select max(amt)from orders);

=====================================================================================================================
124.Which salesperson(s) should be fired?
ans:select a.sname,a.snum,sum(c.amt),sum(c.amt)*comm from salespeople a,customer b,orders c where a.snum = b.snum and b.cnum = c.cnum
    group by a.snum;

================================================================================================================
125.What is the total income for the company?
ans: select sum(amt) from orders;
